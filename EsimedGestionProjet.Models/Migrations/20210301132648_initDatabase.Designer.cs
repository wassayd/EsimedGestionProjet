// <auto-generated />
using System;
using EsimedGestionProjet.Entities.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EsimedGestionProjet.Entities.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210301132648_initDatabase")]
    partial class initDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EsimedGestionProjet.Models.Milestone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleveryDateEstimated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progression")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RealDateEstimated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TheoricCalculatedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Milestone");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDateReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDateTheorical")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Requirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequirementNoneFunctional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isFunctional")
                        .HasColumnType("bit");

                    b.Property<Guid>("projectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("projectId");

                    b.ToTable("Requirement");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MilestoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("NbDay")
                        .HasColumnType("real");

                    b.Property<DateTime>("RealStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TheoricDateStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("projectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MilestoneId");

                    b.HasIndex("UserId");

                    b.HasIndex("projectId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trigram")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RequirementTask", b =>
                {
                    b.Property<Guid>("RequirementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TasksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequirementsId", "TasksId");

                    b.HasIndex("TasksId");

                    b.ToTable("RequirementTask");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Milestone", b =>
                {
                    b.HasOne("EsimedGestionProjet.Models.Project", "Project")
                        .WithMany("Milestones")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsimedGestionProjet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Project", b =>
                {
                    b.HasOne("EsimedGestionProjet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Requirement", b =>
                {
                    b.HasOne("EsimedGestionProjet.Models.Project", "project")
                        .WithMany("Requirements")
                        .HasForeignKey("projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Task", b =>
                {
                    b.HasOne("EsimedGestionProjet.Models.Milestone", "Milestone")
                        .WithMany("Tasks")
                        .HasForeignKey("MilestoneId");

                    b.HasOne("EsimedGestionProjet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("EsimedGestionProjet.Models.Project", "project")
                        .WithMany("Tasks")
                        .HasForeignKey("projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Milestone");

                    b.Navigation("project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RequirementTask", b =>
                {
                    b.HasOne("EsimedGestionProjet.Models.Requirement", null)
                        .WithMany()
                        .HasForeignKey("RequirementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsimedGestionProjet.Models.Task", null)
                        .WithMany()
                        .HasForeignKey("TasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Milestone", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EsimedGestionProjet.Models.Project", b =>
                {
                    b.Navigation("Milestones");

                    b.Navigation("Requirements");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
